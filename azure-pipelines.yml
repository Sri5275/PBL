# azure-pipelines.yml

trigger:
- main

variables:
- group: MPipeline
- name: GITHUB_API_URL
  value: 'https://api.github.com/user'

pool:
  vmImage: 'windows-latest'

steps:
- task: PowerShell@2
  displayName: 'Send POST Request with Invoke-RestMethod'
  inputs:
    targetType: 'inline'
    script: |
      $token = "$(GitHubPAT)"
       # Retrieve necessary variables
      $githubApiUrl = "$(GITHUB_API_URL)"

      # Set the headers for the GitHub API request
      $githubHeaders = @{
        'Authorization' = "Bearer $token"
      }

      # Make the GET request to the GitHub API to retrieve user information
      $githubResponse = Invoke-RestMethod -Uri $githubApiUrl -Method Get -Headers $githubHeaders

      # Extract username and repository name from the GitHub response
      $owner = $githubResponse.login
      # $fullRepoUrl = "$(Build.Repository.Uri)"
      $repo = "farmercommodity"

      # Log the retrieved details
      Write-Host "Retrieved GitHub Username: $owner"
      Write-Host "Repository Name: $repo"

      # Define data to be sent
      $postData = @{
          owner = $owner
          repo = $repo
          token = $token
      }

      # Convert data to JSON
      $jsonBody = $postData | ConvertTo-Json

      # Set API endpoint
      $apiEndpoint = "https://codeanalysis.azurewebsites.net/CodeAnalysis/PerfromStaticCodeAnalysis?owner=$owner&repo=$repo&token=$token"

      try {
          # Make HTTP POST request
          $response = Invoke-RestMethod -Uri $apiEndpoint -Method Post -Body $jsonBody -ContentType "application/json"
          
          # Check if response is false
          if ($response -eq $false) {
              Write-Host "Response from Target API is false. Stopping the pipeline."
              exit 1
          } else {
              Write-Host "Response from Target API: $($response | ConvertTo-Json -Depth 3)"
          }
      } catch {
          Write-Host "Error occurred: $_"
          exit 1
      }
